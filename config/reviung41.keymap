/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    macros {
        back: back {
            compatible = "zmk,behavior-macro";
            label = "back";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LEFT_ALT>;
        };

        forward: forward {
            compatible = "zmk,behavior-macro";
            label = "forward";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LEFT_ALT>;
        };

        umlaut: umlaut {
            compatible = "zmk,behavior-macro";
            label = "umlaut";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&macro_tap>, <&kp RIGHT_ALT &kp DOUBLE_QUOTES>;
        };

        del_all: del_all {
            compatible = "zmk,behavior-macro";
            label = "del_all";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp BACKSPACE>;
        };

        undo: undo {
            compatible = "zmk,behavior-macro";
            label = "undo";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp Z>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        cut: cut {
            compatible = "zmk,behavior-macro";
            label = "cut";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp X>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        copy: copy {
            compatible = "zmk,behavior-macro";
            label = "copy";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp C>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        paste: paste {
            compatible = "zmk,behavior-macro";
            label = "paste";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        ctrl_d: ctrl_d {
            compatible = "zmk,behavior-macro";
            label = "ctrl_d";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp D>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        select_all: select_all {
            compatible = "zmk,behavior-macro";
            label = "select_all";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        plural: plural {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp COMMA &kp SPACE &kp MINUS>;

            tap-ms = <5>;
            wait-ms = <5>;
        };

        umlaut_plural: umlaut_plural {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp COMMA &kp SPACE &kp DOUBLE_QUOTES &kp MINUS>;

            tap-ms = <5>;
            wait-ms = <5>;
        };
    };

    combos {
        compatible = "zmk,combos";

        qw_tab {
            bindings = <&kp TAB>;
            key-positions = <3 4>;
        };

        o_apostrophe_umlaut {
            bindings = <&umlaut>;
            key-positions = <22 34>;
        };

        ralt {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <35 23>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  F  |  P  |  G  |   |  J  |  L   |  U  |  Y  |  ;  |   BKSP    |
            // | CTRL |  A  |  R  |  S  |  T  |  D  |   |  H  |  N   |  E  |  I  |  O  |    '      |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  K  |  M   |  ,  |  .  |  /  | SHFT(RET) |
            //                         | ALT | LWR | SPC | RSE  | ALT |

            bindings = <
&kp RIGHT_WIN  &kp Q  &kp W  &kp F     &kp P             &kp G             &kp J  &kp L  &kp U      &kp Y    &kp SEMI  &kp BACKSPACE
&mo 3          &kp A  &kp R  &kp S     &kp T             &kp D             &kp H  &kp N  &kp E      &kp I    &kp O     &kp SQT
&kp LSHFT      &kp Z  &kp X  &kp C     &kp V             &kp B             &kp K  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &mt RSHFT RET
                             &kp LALT  &kp LEFT_CONTROL         &kp SPACE         &mo 1  &mo 2
            >;
        };

        lower_layer {
            // ----------------------------------------------------------------------------------
            // |    |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |    DEL    |
            // |    |  _  |  +  |  {  |  }  | "|" |   | LFT | DWN |  UP | RGT |  `  |     ~     |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | HOME| END | PGUP| PGDN| PRSC| SHFT(RET) |
            //                       |     |     | RET | ADJ |     |

            bindings = <
&trans  &kp EXCL        &kp AT   &kp HASH  &kp DLLR        &kp PRCNT                 &kp CARET          &kp AMPS         &kp ASTERISK    &kp LPAR   &kp RPAR       &trans
&trans  &trans          &trans   &kp PIPE  &kp LEFT_BRACE  &kp LEFT_BRACKET          &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp MINUS       &kp PLUS   &kp GRAVE      &kp TILDE
&trans  &umlaut_plural  &plural  &trans    &trans          &trans                    &trans             &trans           &kp UNDERSCORE  &kp EQUAL  &kp BACKSLASH  &mt RSHFT RET
                                 &trans    &trans                            &trans                     &trans           &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |    |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
            // |    |  -  |  =  |  [  |  ]  |  \  |   | F1  | F2  | F3  | F4  | F5  | F6  |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | F7  | F8  | F9  | F10 | F11 | F12 |
            //                       |     | ADJ | BKSP |    |     |

            bindings = <
&trans  &kp N1   &kp N2   &kp N3  &kp N4  &kp N5          &kp N6           &kp N7       &kp N8  &kp N9  &kp N0   &trans
&trans  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5          &kp F6           &kp F7       &kp F8  &kp F9  &kp F10  &trans
&trans  &kp F11  &kp F12  &trans  &trans  &trans          &kp PRINTSCREEN  &kp K_SLEEP  &trans  &trans  &trans   &trans
                          &trans  &trans          &trans                   &trans       &trans
            >;
        };

        NAVI_LAYER {
            bindings = <
&trans        &kp ESC      &mkp 0x01     &back           &forward   &mkp 0x02           &kp PAGE_UP    &kp HOME  &kp UP    &kp END    &kp DEL        &kp INSERT
&trans        &select_all  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LCTRL  &ctrl_d             &kp PAGE_DOWN  &kp LEFT  &kp DOWN  &kp RIGHT  &kp BACKSPACE  &kp K_CONTEXT_MENU
&kp CAPSLOCK  &undo        &cut          &copy           &paste     &trans              &trans         &trans    &trans    &trans     &del_all       &trans
                                         &trans          &trans                &kp RET                 &mo 4     &mo 4
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |    | RGB TOG |   |  BT1  | BT2 | BT3 | BT4 | BT5 | BT CLR |
            // | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- |    |         |   |       |     |     |     |     |        |
            // |          |          |          |          |    |         |   | RESET |     |     |     |     |        |
            //                                              |     |     |     |     |     |

            bindings = <
&rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_EFF  &none              &rgb_ug RGB_TOG           &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_EFR  &ext_power EP_OFF  &ext_power EP_ON          &kp K_MUTE   &kp K_VOL_DN  &kp K_VOL_UP  &kp K_PP      &kp K_PREV    &kp K_NEXT
&trans           &none            &none            &none            &none              &none                     &bootloader  &sys_reset    &out OUT_USB  &out OUT_BLE  &out OUT_TOG  &none
                                                   &trans           &trans                               &tog 4               &trans        &trans
            >;
        };
    };
};
