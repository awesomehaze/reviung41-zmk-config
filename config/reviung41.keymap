/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>

/ {
    macros {
        back: back {
            compatible = "zmk,behavior-macro";
            label = "back";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LEFT_ALT>;
        };
        forward: forward {
            compatible = "zmk,behavior-macro";
            label = "forward";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_press>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LEFT_ALT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  F  |  P  |  G  |   |  J  |  L   |  U  |  Y  |  ;  |   BKSP    |
            // | CTRL |  A  |  R  |  S  |  T  |  D  |   |  H  |  N   |  E  |  I  |  O  |    '      |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  K  |  M   |  ,  |  .  |  /  | SHFT(RET) |
            //                         | ALT | LWR | SPC | RSE  | ALT |

            bindings = <
 &kp LCTRL   &kp Q   &kp W     &kp F   &kp P   &kp G              &kp J       &kp L         &kp U    &kp Y  &kp SEMI        &kp TAB
     &mo 1   &kp A   &kp R     &kp S   &kp T   &kp D              &kp H       &kp N         &kp E    &kp I     &kp O        &kp SQT
 &kp LSHFT   &kp Z   &kp X     &kp C   &kp V   &kp B              &kp K       &kp M     &kp COMMA  &kp DOT  &kp FSLH  &mt RSHFT RET
                            &kp LALT   &mo 2          &kp SPACE          &lt 3 RALT  &kp LEFT_WIN
            >;
        };

        NAVI_LAYER {
            bindings = <
       &trans  &kp ESC        &trans           &back   &forward  &trans             &kp PAGE_UP  &kp HOME    &kp UP    &kp END        &kp DEL  &kp INSERT
       &trans   &trans  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LCTRL  &trans           &kp PAGE_DOWN  &kp LEFT  &kp DOWN  &kp RIGHT  &kp BACKSPACE  &kp K_MENU
 &kp CAPSLOCK   &trans        &trans          &trans     &trans  &trans                  &trans    &trans    &trans     &trans         &trans      &trans
                                              &trans     &trans          &kp RET                   &trans    &trans
            >;
        };

        lower_layer {
            // ----------------------------------------------------------------------------------
            // |    |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |    DEL    |
            // |    |  _  |  +  |  {  |  }  | "|" |   | LFT | DWN |  UP | RGT |  `  |     ~     |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | HOME| END | PGUP| PGDN| PRSC| SHFT(RET) |
            //                       |     |     | RET | ADJ |     |

            bindings = <
 &trans  &kp EXCL         &kp AT  &kp HASH        &kp DLLR         &kp PRCNT                  &kp CARET         &kp AMPS    &kp ASTERISK   &kp LPAR   &kp RPAR         &trans
  &mo 1  &kp PIPE  &kp BACKSLASH  &kp LBRC  &kp LEFT_BRACE  &kp LEFT_BRACKET          &kp RIGHT_BRACKET  &kp RIGHT_BRACE       &kp MINUS   &kp PLUS  &kp GRAVE      &kp TILDE
 &trans    &trans         &trans    &trans          &trans            &trans                     &trans           &trans  &kp UNDERSCORE  &kp EQUAL  &kp PSCRN  &mt RSHFT RET
                                    &trans          &trans                    &trans                               &mo 4          &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |    |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
            // |    |  -  |  =  |  [  |  ]  |  \  |   | F1  | F2  | F3  | F4  | F5  | F6  |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | F7  | F8  | F9  | F10 | F11 | F12 |
            //                       |     | ADJ | BKSP |    |     |

            bindings = <
 &trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5           &kp N6   &kp N7  &kp N8  &kp N9   &kp N0  &trans
  &mo 1  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5           &kp F6   &kp F7  &kp F8  &kp F9  &kp F10  &kp F6
 &trans  &trans  &trans  &trans  &trans  &trans          &kp F11  &kp F12  &trans  &trans   &trans  &trans
                         &trans   &mo 4          &trans            &trans  &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |    | RGB TOG |   |  BT1  | BT2 | BT3 | BT4 | BT5 | BT CLR |
            // | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- |    |         |   |       |     |     |     |     |        |
            // |          |          |          |          |    |         |   | RESET |     |     |     |     |        |
            //                                              |     |     |     |     |     |

            bindings = <
 &rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_EFF   &none  &rgb_ug RGB_TOG          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
 &rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_EFR   &none            &none                 &none         &none         &none         &none         &none       &none
          &trans            &none            &none            &none   &none            &none                &reset   &bootloader         &none         &none         &none       &none
                                                             &trans  &trans                   &tog 4                      &trans        &trans
            >;
        };
    };
};
